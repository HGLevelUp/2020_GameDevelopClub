#include <stdio.h>
#include <windows.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>


int oldtime;
int T_oldtime;
int O_oldtime;
int random;
int random1 = 0, random2 = 0;
int curtime;
int score;
int yousc;



void Timenote();
void Setnode();
void Key();
void Update();
void Render();

int map[3][3] = { {0,0,0},
				  {0,0,0}, 
				  {0,0,0} };

void gotoxy(int x, int y);

int main() {

	while (1) {
		curtime = clock();
		if (curtime - oldtime >= 33) {
			Update();
			Render();
			Key();

			oldtime = curtime;
		}


	}

}

void Key() {
	if (_kbhit()) {
	char key;
	key = _getch();
	
	
		switch (key) {
		case 'q':
			if (map[0][0] == 1) {
				map[0][0] = 0;
				yousc += 7;
			}
			break;
		case 'w':
			if (map[0][1] == 1) {
				map[0][1] = 0;
				yousc += 7;
			}
			break;
		case 'e':
			if (map[0][2] == 1) {
				map[0][2] = 0;
				yousc += 7;
			}
			break;
		case 'a':
			if (map[1][0] == 1) {
				map[1][0] = 0;
				yousc += 7;
			}
			break;
		case 's':
			if (map[1][1] == 1) {
				map[1][1] = 0;
				yousc += 7;
			}
			break;
		case 'd':
			if (map[1][2] == 1) {
				map[1][2] = 0;
				yousc += 7;
			}
			break;
		case 'z':
			if (map[2][0] == 1) {
				map[2][0] = 0;
				yousc += 7;
			}
			break;
		case 'x':
			if (map[2][1] == 1) {
				map[2][1] = 0;
				yousc += 7;
			}
			break;
		case 'c':
			if (map[2][2] == 1) {
				map[2][2] = 0;
				yousc += 7;
			}
			break;
		}
	}
};

void Timenote() {
	if (curtime - O_oldtime >= 1000) {
		score++;
		O_oldtime = curtime;
	}
};

void Setnode() {
	if (curtime - T_oldtime >= 1000) {
		while (1) {
			random1 = rand() % 3;
			random2 = rand() % 3;

			if (map[random2][random1] == 1)
				continue;
			map[random2][random1] = 1;
			break;
		}
		T_oldtime = curtime;
	}
	
};

void Update() {
	Key();
	Setnode();
	Timenote();

};

void Render() {
	system("cls");

	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			if (map[i][j] == 0)
				printf("□");
			else
				printf("■");

		}
		printf("\n");

	}	
		gotoxy(10, 0);
		printf("플레이 시간: %d", score);	


		printf("\t점수: %d", yousc);
}

void gotoxy(int x, int y) {
	COORD c = { x, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);

}